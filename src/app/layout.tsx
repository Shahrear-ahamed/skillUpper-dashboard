import type { Metadata } from "next";
import "./globals.css";
import StoreProvider from "./  StoreProvider";
import { Hind_Siliguri } from "next/font/google";

const hindSiliguri = Hind_Siliguri({
  subsets: ["bengali"],
  weight: ["300", "400", "500", "600", "700"],
});

export const metadata: Metadata = {
  title: "Test Dashboard for SkillUpper",
  description: "Generated by create next app",
  generator: "Next.js",
  manifest: "/manifest.json",
  keywords: ["skillupper", "skill", "lws", "course", "learn", "upper"],
  themeColor: [{ media: "(prefers-color-scheme: dark)", color: "#fff" }],
  authors: [
    { name: "Shahrear Ahamed" },
    {
      name: "Shahrear Ahamed",
      url: "https://www.linkedin.com/in/shahrear-ahamed/",
    },
  ],
  viewport:
    "minimum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no, viewport-fit=cover",
  icons: [
    { rel: "apple-touch-icon", url: "icons/live.png.png" },
    { rel: "icon", url: "icons/live.png.png" },
  ],
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <StoreProvider>
      <html lang="en">
        <head>
          <title>{metadata.title as string}</title>
          <meta name="description" content={metadata.description as string} />
          <meta name="generator" content={metadata.generator as string} />
          <link rel="manifest" href={metadata.manifest as string} />
          <meta
            name="keywords"
            content={
              (Array.isArray(metadata.keywords)
                ? metadata.keywords.join(", ")
                : metadata.keywords || "") as string
            }
          />
          {(
            metadata.themeColor as Array<{ media: string; color: string }>
          )?.map(({ media, color }, index) => (
            <meta
              key={index}
              name="theme-color"
              media={media}
              content={color}
            />
          ))}
          {(metadata.authors as Array<{ name: string; url?: string }>)?.map(
            ({ name, url }, index) => (
              <meta
                key={index}
                name="author"
                content={name}
                {...(url && { href: url })}
              />
            )
          )}
          <meta name="viewport" content={metadata.viewport as string} />
          {(metadata.icons as Array<{ rel: string; url: string }>)?.map(
            ({ rel, url }, index) => (
              <link key={index} rel={rel} href={url} />
            )
          )}
        </head>
        <body className={`${hindSiliguri.className} antialiased`}>
          {children}
        </body>
      </html>
    </StoreProvider>
  );
}
